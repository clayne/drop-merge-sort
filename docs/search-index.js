var searchIndex = {};
searchIndex["dmsort"] = {"doc":"Drop-Merge sort created and implemented by Emil Ernerfeldt.","items":[[5,"sort","dmsort","Sorts the elements using the Ord trait.\n# Examples\n```\nlet mut numbers : Vec&lt;i32&gt; = vec!(0, 1, 6, 7, 2, 3, 4, 5);\ndmsort::sort(&amp;mut numbers);\nassert_eq!(numbers, vec!(0, 1, 2, 3, 4, 5, 6, 7));\n```",null,null],[5,"sort_by","","Sorts the elements using the given compare function.\n# Examples\n```\nlet mut numbers : Vec&lt;i32&gt; = vec!(0, 1, 6, 7, 2, 3, 4, 5);\ndmsort::sort_by(&amp;mut numbers, |a, b| b.cmp(a));\nassert_eq!(numbers, vec!(7, 6, 5, 4, 3, 2, 1, 0));\n```",null,null],[5,"sort_by_key","","Sorts the elements using the given key function.\n# Examples\n```\nlet mut numbers : Vec&lt;i32&gt; = vec!(0, 1, 6, 7, 2, 3, 4, 5);\ndmsort::sort_by_key(&amp;mut numbers, |x| -x);\nassert_eq!(numbers, vec!(7, 6, 5, 4, 3, 2, 1, 0));\n```",null,null],[5,"sort_copy","","UNSTABLE! FOR INTERNAL USE ONLY.",null,null]],"paths":[]};
searchIndex["pdqsort"] = {"doc":"Pattern-defeating quicksort.","items":[[5,"sort","pdqsort","Sorts a slice.",null,null],[5,"sort_by_key","","Sorts a slice using `f` to extract a key to compare elements by.",null,null],[5,"sort_by","","Sorts a slice using `compare` to compare elements.",null,null]],"paths":[]};
initSearch(searchIndex);
